/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_french_osx.h"
#include "../chording/mapping.h"

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define NUM     4

#define COMBO_TIMEOUT 200

/ {
        behaviors {
                hm: homerow_mods {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOMEROW_MODS";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        quick-tap-ms = <0>;
                        flavor = "tap-preferred";
                        bindings = <&kp>, <&kp>;
                };
        };
        combos {
                compatible = "zmk,combos";
                combo_esc {
                        timeout-ms = <50>;
                        key-positions = <1 2>;
                        bindings = <&kp TAB>;
                };
                // CHORDING COMBOS START
                combo_m_the {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T>;
                        bindings = <&m_the>;
                };
                combo_m_and {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A>;
                        bindings = <&m_and>;
                };
                combo_m_you {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Y>;
                        bindings = <&m_you>;
                };
                combo_m_that {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H>;
                        bindings = <&m_that>;
                };
                combo_m_was {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W>;
                        bindings = <&m_was>;
                };
                combo_m_for {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F>;
                        bindings = <&m_for>;
                };
                combo_m_are {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_R>;
                        bindings = <&m_are>;
                };
                combo_m_with {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_I>;
                        bindings = <&m_with>;
                };
                combo_m_his {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H>;
                        bindings = <&m_his>;
                };
                combo_m_they {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_E>;
                        bindings = <&m_they>;
                };
                combo_m_one {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O>;
                        bindings = <&m_one>;
                };
                combo_m_have {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_A>;
                        bindings = <&m_have>;
                };
                combo_m_this {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_I>;
                        bindings = <&m_this>;
                };
                combo_m_from {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_R>;
                        bindings = <&m_from>;
                };
                combo_m_had {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_D>;
                        bindings = <&m_had>;
                };
                combo_m_hot {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_O>;
                        bindings = <&m_hot>;
                };
                combo_m_but {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B>;
                        bindings = <&m_but>;
                };
                combo_m_some {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S>;
                        bindings = <&m_some>;
                };
                combo_m_what {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_T>;
                        bindings = <&m_what>;
                };
                combo_m_there {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_R>;
                        bindings = <&m_there>;
                };
                combo_m_can {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C>;
                        bindings = <&m_can>;
                };
                combo_m_out {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_U>;
                        bindings = <&m_out>;
                };
                combo_m_other {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_T P_R>;
                        bindings = <&m_other>;
                };
                combo_m_were {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_E>;
                        bindings = <&m_were>;
                };
                combo_m_all {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_L>;
                        bindings = <&m_all>;
                };
                combo_m_your {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Y P_O>;
                        bindings = <&m_your>;
                };
                combo_m_when {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_N>;
                        bindings = <&m_when>;
                };
                combo_m_use {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_U>;
                        bindings = <&m_use>;
                };
                combo_m_word {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_D>;
                        bindings = <&m_word>;
                };
                combo_m_how {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_W>;
                        bindings = <&m_how>;
                };
                combo_m_said {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_A>;
                        bindings = <&m_said>;
                };
                combo_m_each {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E>;
                        bindings = <&m_each>;
                };
                combo_m_she {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_H>;
                        bindings = <&m_she>;
                };
                combo_m_which {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_I>;
                        bindings = <&m_which>;
                };
                combo_m_their {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_E P_I>;
                        bindings = <&m_their>;
                };
                combo_m_time {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_I>;
                        bindings = <&m_time>;
                };
                combo_m_will {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_L>;
                        bindings = <&m_will>;
                };
                combo_m_way {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_Y>;
                        bindings = <&m_way>;
                };
                combo_m_about {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_B>;
                        bindings = <&m_about>;
                };
                combo_m_many {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M>;
                        bindings = <&m_many>;
                };
                combo_m_then {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_N>;
                        bindings = <&m_then>;
                };
                combo_m_them {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_M>;
                        bindings = <&m_them>;
                };
                combo_m_would {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_O>;
                        bindings = <&m_would>;
                };
                combo_m_write {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_R>;
                        bindings = <&m_write>;
                };
                combo_m_like {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L>;
                        bindings = <&m_like>;
                };
                combo_m_these {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_S>;
                        bindings = <&m_these>;
                };
                combo_m_her {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_E>;
                        bindings = <&m_her>;
                };
                combo_m_long {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_G>;
                        bindings = <&m_long>;
                };
                combo_m_make {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_A>;
                        bindings = <&m_make>;
                };
                combo_m_thing {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_I P_N>;
                        bindings = <&m_thing>;
                };
                combo_m_see {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_E>;
                        bindings = <&m_see>;
                };
                combo_m_him {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_I>;
                        bindings = <&m_him>;
                };
                combo_m_two {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_W P_O>;
                        bindings = <&m_two>;
                };
                combo_m_has {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_A P_S>;
                        bindings = <&m_has>;
                };
                combo_m_look {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_O>;
                        bindings = <&m_look>;
                };
                combo_m_more {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_O>;
                        bindings = <&m_more>;
                };
                combo_m_day {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D>;
                        bindings = <&m_day>;
                };
                combo_m_could {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_O>;
                        bindings = <&m_could>;
                };
                combo_m_come {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_M>;
                        bindings = <&m_come>;
                };
                combo_m_did {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_I>;
                        bindings = <&m_did>;
                };
                combo_m_sound {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_O>;
                        bindings = <&m_sound>;
                };
                combo_m_most {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_S>;
                        bindings = <&m_most>;
                };
                combo_m_number {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N>;
                        bindings = <&m_number>;
                };
                combo_m_who {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_O>;
                        bindings = <&m_who>;
                };
                combo_m_over {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_V>;
                        bindings = <&m_over>;
                };
                combo_m_know {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_K>;
                        bindings = <&m_know>;
                };
                combo_m_water {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_T P_E>;
                        bindings = <&m_water>;
                };
                combo_m_than {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_A>;
                        bindings = <&m_than>;
                };
                combo_m_call {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_A>;
                        bindings = <&m_call>;
                };
                combo_m_first {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_I>;
                        bindings = <&m_first>;
                };
                combo_m_people {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P>;
                        bindings = <&m_people>;
                };
                combo_m_may {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_Y>;
                        bindings = <&m_may>;
                };
                combo_m_down {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_O>;
                        bindings = <&m_down>;
                };
                combo_m_side {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_I>;
                        bindings = <&m_side>;
                };
                combo_m_been {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_E>;
                        bindings = <&m_been>;
                };
                combo_m_now {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_O>;
                        bindings = <&m_now>;
                };
                combo_m_find {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_N>;
                        bindings = <&m_find>;
                };
                combo_m_any {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_N>;
                        bindings = <&m_any>;
                };
                combo_m_new {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_E>;
                        bindings = <&m_new>;
                };
                combo_m_work {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_K>;
                        bindings = <&m_work>;
                };
                combo_m_part {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_A>;
                        bindings = <&m_part>;
                };
                combo_m_take {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_A>;
                        bindings = <&m_take>;
                };
                combo_m_get {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G>;
                        bindings = <&m_get>;
                };
                combo_m_place {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_L>;
                        bindings = <&m_place>;
                };
                combo_m_made {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_D>;
                        bindings = <&m_made>;
                };
                combo_m_live {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_I>;
                        bindings = <&m_live>;
                };
                combo_m_where {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_E>;
                        bindings = <&m_where>;
                };
                combo_m_after {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_F>;
                        bindings = <&m_after>;
                };
                combo_m_back {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_K>;
                        bindings = <&m_back>;
                };
                combo_m_little {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_T>;
                        bindings = <&m_little>;
                };
                combo_m_only {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_N P_L>;
                        bindings = <&m_only>;
                };
                combo_m_round {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R>;
                        bindings = <&m_round>;
                };
                combo_m_man {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_N>;
                        bindings = <&m_man>;
                };
                combo_m_year {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Y P_R>;
                        bindings = <&m_year>;
                };
                combo_m_came {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_A P_M>;
                        bindings = <&m_came>;
                };
                combo_m_show {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_H P_O>;
                        bindings = <&m_show>;
                };
                combo_m_every {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_V>;
                        bindings = <&m_every>;
                };
                combo_m_good {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_O>;
                        bindings = <&m_good>;
                };
                combo_m_give {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_I>;
                        bindings = <&m_give>;
                };
                combo_m_our {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_R>;
                        bindings = <&m_our>;
                };
                combo_m_under {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_U P_N>;
                        bindings = <&m_under>;
                };
                combo_m_name {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_A P_M>;
                        bindings = <&m_name>;
                };
                combo_m_very {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_V>;
                        bindings = <&m_very>;
                };
                combo_m_through {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_R P_O>;
                        bindings = <&m_through>;
                };
                combo_m_just {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_J>;
                        bindings = <&m_just>;
                };
                combo_m_form {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_M>;
                        bindings = <&m_form>;
                };
                combo_m_much {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_U>;
                        bindings = <&m_much>;
                };
                combo_m_great {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_R>;
                        bindings = <&m_great>;
                };
                combo_m_think {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_K>;
                        bindings = <&m_think>;
                };
                combo_m_say {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_Y>;
                        bindings = <&m_say>;
                };
                combo_m_help {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_P>;
                        bindings = <&m_help>;
                };
                combo_m_low {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_O P_W>;
                        bindings = <&m_low>;
                };
                combo_m_line {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_N>;
                        bindings = <&m_line>;
                };
                combo_m_before {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_F>;
                        bindings = <&m_before>;
                };
                combo_m_turn {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_U>;
                        bindings = <&m_turn>;
                };
                combo_m_cause {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_S>;
                        bindings = <&m_cause>;
                };
                combo_m_same {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_A P_M>;
                        bindings = <&m_same>;
                };
                combo_m_mean {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_E>;
                        bindings = <&m_mean>;
                };
                combo_m_differ {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_F>;
                        bindings = <&m_differ>;
                };
                combo_m_move {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_V>;
                        bindings = <&m_move>;
                };
                combo_m_right {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_I>;
                        bindings = <&m_right>;
                };
                combo_m_boy {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_O>;
                        bindings = <&m_boy>;
                };
                combo_m_old {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_L P_D>;
                        bindings = <&m_old>;
                };
                combo_m_too {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_O>;
                        bindings = <&m_too>;
                };
                combo_m_does {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_S>;
                        bindings = <&m_does>;
                };
                combo_m_tell {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_E>;
                        bindings = <&m_tell>;
                };
                combo_m_sentence {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_N P_T>;
                        bindings = <&m_sentence>;
                };
                combo_m_set {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T>;
                        bindings = <&m_set>;
                };
                combo_m_three {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_R P_E>;
                        bindings = <&m_three>;
                };
                combo_m_want {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_N P_T>;
                        bindings = <&m_want>;
                };
                combo_m_air {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_I>;
                        bindings = <&m_air>;
                };
                combo_m_well {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_E P_L>;
                        bindings = <&m_well>;
                };
                combo_m_also {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_S P_O>;
                        bindings = <&m_also>;
                };
                combo_m_play {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_L P_A>;
                        bindings = <&m_play>;
                };
                combo_m_small {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_A P_L>;
                        bindings = <&m_small>;
                };
                combo_m_end {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_D>;
                        bindings = <&m_end>;
                };
                combo_m_put {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_U>;
                        bindings = <&m_put>;
                };
                combo_m_home {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_O P_E>;
                        bindings = <&m_home>;
                };
                combo_m_read {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_E>;
                        bindings = <&m_read>;
                };
                combo_m_hand {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_N>;
                        bindings = <&m_hand>;
                };
                combo_m_port {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_O>;
                        bindings = <&m_port>;
                };
                combo_m_large {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_R>;
                        bindings = <&m_large>;
                };
                combo_m_spell {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_P>;
                        bindings = <&m_spell>;
                };
                combo_m_add {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_D>;
                        bindings = <&m_add>;
                };
                combo_m_even {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_V P_N>;
                        bindings = <&m_even>;
                };
                combo_m_land {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_A P_N>;
                        bindings = <&m_land>;
                };
                combo_m_here {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_R>;
                        bindings = <&m_here>;
                };
                combo_m_must {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_U P_S>;
                        bindings = <&m_must>;
                };
                combo_m_big {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_I>;
                        bindings = <&m_big>;
                };
                combo_m_high {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_G>;
                        bindings = <&m_high>;
                };
                combo_m_such {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_U>;
                        bindings = <&m_such>;
                };
                combo_m_follow {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_W>;
                        bindings = <&m_follow>;
                };
                combo_m_act {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_C P_T>;
                        bindings = <&m_act>;
                };
                combo_m_why {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_Y>;
                        bindings = <&m_why>;
                };
                combo_m_ask {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_K>;
                        bindings = <&m_ask>;
                };
                combo_m_men {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_E P_N>;
                        bindings = <&m_men>;
                };
                combo_m_change {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_H>;
                        bindings = <&m_change>;
                };
                combo_m_went {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_E P_N>;
                        bindings = <&m_went>;
                };
                combo_m_light {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_G P_T>;
                        bindings = <&m_light>;
                };
                combo_m_kind {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_K P_I>;
                        bindings = <&m_kind>;
                };
                combo_m_off {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_F>;
                        bindings = <&m_off>;
                };
                combo_m_need {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_D>;
                        bindings = <&m_need>;
                };
                combo_m_house {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_S P_E>;
                        bindings = <&m_house>;
                };
                combo_m_picture {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_I>;
                        bindings = <&m_picture>;
                };
                combo_m_try {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_R>;
                        bindings = <&m_try>;
                };
                combo_m_again {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_G>;
                        bindings = <&m_again>;
                };
                combo_m_animal {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_N P_I>;
                        bindings = <&m_animal>;
                };
                combo_m_point {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_N>;
                        bindings = <&m_point>;
                };
                combo_m_mother {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_T P_R>;
                        bindings = <&m_mother>;
                };
                combo_m_world {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_R P_L>;
                        bindings = <&m_world>;
                };
                combo_m_near {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_R>;
                        bindings = <&m_near>;
                };
                combo_m_build {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_U>;
                        bindings = <&m_build>;
                };
                combo_m_self {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_L>;
                        bindings = <&m_self>;
                };
                combo_m_earth {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_A>;
                        bindings = <&m_earth>;
                };
                combo_m_father {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_T>;
                        bindings = <&m_father>;
                };
                combo_m_head {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_E P_A>;
                        bindings = <&m_head>;
                };
                combo_m_stand {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_A>;
                        bindings = <&m_stand>;
                };
                combo_m_own {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_W P_N>;
                        bindings = <&m_own>;
                };
                combo_m_page {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_E>;
                        bindings = <&m_page>;
                };
                combo_m_should {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_H P_D>;
                        bindings = <&m_should>;
                };
                combo_m_country {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_N>;
                        bindings = <&m_country>;
                };
                combo_m_found {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_O P_U>;
                        bindings = <&m_found>;
                };
                combo_m_answer {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_N P_S>;
                        bindings = <&m_answer>;
                };
                combo_m_school {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_C P_H>;
                        bindings = <&m_school>;
                };
                combo_m_grow {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_R P_O>;
                        bindings = <&m_grow>;
                };
                combo_m_study {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_U>;
                        bindings = <&m_study>;
                };
                combo_m_still {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_I>;
                        bindings = <&m_still>;
                };
                combo_m_learn {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_E>;
                        bindings = <&m_learn>;
                };
                combo_m_plant {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_L P_N>;
                        bindings = <&m_plant>;
                };
                combo_m_cover {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_V>;
                        bindings = <&m_cover>;
                };
                combo_m_food {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_O P_D>;
                        bindings = <&m_food>;
                };
                combo_m_sun {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_N>;
                        bindings = <&m_sun>;
                };
                combo_m_four {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_U P_R>;
                        bindings = <&m_four>;
                };
                combo_m_thought {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_O>;
                        bindings = <&m_thought>;
                };
                combo_m_let {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_E P_T>;
                        bindings = <&m_let>;
                };
                combo_m_keep {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_K P_E>;
                        bindings = <&m_keep>;
                };
                combo_m_eye {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_Y>;
                        bindings = <&m_eye>;
                };
                combo_m_never {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_V>;
                        bindings = <&m_never>;
                };
                combo_m_last {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_S P_T>;
                        bindings = <&m_last>;
                };
                combo_m_door {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_R>;
                        bindings = <&m_door>;
                };
                combo_m_between {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_W>;
                        bindings = <&m_between>;
                };
                combo_m_city {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_I>;
                        bindings = <&m_city>;
                };
                combo_m_tree {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_R P_E>;
                        bindings = <&m_tree>;
                };
                combo_m_cross {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_R>;
                        bindings = <&m_cross>;
                };
                combo_m_since {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_I P_N>;
                        bindings = <&m_since>;
                };
                combo_m_hard {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_A P_R>;
                        bindings = <&m_hard>;
                };
                combo_m_start {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_R>;
                        bindings = <&m_start>;
                };
                combo_m_might {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_I>;
                        bindings = <&m_might>;
                };
                combo_m_story {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_O>;
                        bindings = <&m_story>;
                };
                combo_m_saw {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_W>;
                        bindings = <&m_saw>;
                };
                combo_m_far {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_A P_R>;
                        bindings = <&m_far>;
                };
                combo_m_draw {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_R P_A>;
                        bindings = <&m_draw>;
                };
                combo_m_left {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_F>;
                        bindings = <&m_left>;
                };
                combo_m_late {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_A P_T>;
                        bindings = <&m_late>;
                };
                combo_m_run {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_U>;
                        bindings = <&m_run>;
                };
                combo_m_donSQTt {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_O P_N>;
                        bindings = <&m_donSQTt>;
                };
                combo_m_while {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_I P_E>;
                        bindings = <&m_while>;
                };
                combo_m_press {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_R>;
                        bindings = <&m_press>;
                };
                combo_m_close {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_L>;
                        bindings = <&m_close>;
                };
                combo_m_night {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_I>;
                        bindings = <&m_night>;
                };
                combo_m_real {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_E P_L>;
                        bindings = <&m_real>;
                };
                combo_m_life {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_I P_F>;
                        bindings = <&m_life>;
                };
                combo_m_few {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_E>;
                        bindings = <&m_few>;
                };
                combo_m_stop {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_P>;
                        bindings = <&m_stop>;
                };
                combo_m_open {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_P P_E>;
                        bindings = <&m_open>;
                };
                combo_m_seem {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_E P_M>;
                        bindings = <&m_seem>;
                };
                combo_m_together {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_G>;
                        bindings = <&m_together>;
                };
                combo_m_next {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_X>;
                        bindings = <&m_next>;
                };
                combo_m_white {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_T>;
                        bindings = <&m_white>;
                };
                combo_m_children {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_H P_I>;
                        bindings = <&m_children>;
                };
                combo_m_begin {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_G>;
                        bindings = <&m_begin>;
                };
                combo_m_got {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_O P_T>;
                        bindings = <&m_got>;
                };
                combo_m_walk {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_A P_L>;
                        bindings = <&m_walk>;
                };
                combo_m_example {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_X>;
                        bindings = <&m_example>;
                };
                combo_m_ease {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_A P_S>;
                        bindings = <&m_ease>;
                };
                combo_m_paper {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_A P_E>;
                        bindings = <&m_paper>;
                };
                combo_m_often {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_F P_T>;
                        bindings = <&m_often>;
                };
                combo_m_always {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_Y P_S>;
                        bindings = <&m_always>;
                };
                combo_m_music {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_S P_C>;
                        bindings = <&m_music>;
                };
                combo_m_those {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_O P_S>;
                        bindings = <&m_those>;
                };
                combo_m_both {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_O P_H>;
                        bindings = <&m_both>;
                };
                combo_m_mark {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_R>;
                        bindings = <&m_mark>;
                };
                combo_m_book {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_O P_K>;
                        bindings = <&m_book>;
                };
                combo_m_letter {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_T P_R>;
                        bindings = <&m_letter>;
                };
                combo_m_until {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_U P_N P_T>;
                        bindings = <&m_until>;
                };
                combo_m_mile {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_I P_E>;
                        bindings = <&m_mile>;
                };
                combo_m_river {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_V>;
                        bindings = <&m_river>;
                };
                combo_m_car {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_A P_R>;
                        bindings = <&m_car>;
                };
                combo_m_feet {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_E P_T>;
                        bindings = <&m_feet>;
                };
                combo_m_care {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_A P_R P_E>;
                        bindings = <&m_care>;
                };
                combo_m_second {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_E P_C>;
                        bindings = <&m_second>;
                };
                combo_m_group {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_R P_U>;
                        bindings = <&m_group>;
                };
                combo_m_carry {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_A P_Y>;
                        bindings = <&m_carry>;
                };
                combo_m_took {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_O P_K>;
                        bindings = <&m_took>;
                };
                combo_m_rain {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_A P_I>;
                        bindings = <&m_rain>;
                };
                combo_m_eat {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_A P_T>;
                        bindings = <&m_eat>;
                };
                combo_m_room {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_O P_M>;
                        bindings = <&m_room>;
                };
                combo_m_friend {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_R P_I>;
                        bindings = <&m_friend>;
                };
                combo_m_began {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_G P_N>;
                        bindings = <&m_began>;
                };
                combo_m_idea {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_I>;
                        bindings = <&m_idea>;
                };
                combo_m_fish {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_H>;
                        bindings = <&m_fish>;
                };
                combo_m_mountain {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_N P_T>;
                        bindings = <&m_mountain>;
                };
                combo_m_north {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_O P_R>;
                        bindings = <&m_north>;
                };
                combo_m_once {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_N P_C>;
                        bindings = <&m_once>;
                };
                combo_m_base {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_S>;
                        bindings = <&m_base>;
                };
                combo_m_hear {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_E P_A P_R>;
                        bindings = <&m_hear>;
                };
                combo_m_horse {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_O P_R>;
                        bindings = <&m_horse>;
                };
                combo_m_cut {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_U>;
                        bindings = <&m_cut>;
                };
                combo_m_sure {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_R>;
                        bindings = <&m_sure>;
                };
                combo_m_watch {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_C P_H>;
                        bindings = <&m_watch>;
                };
                combo_m_color {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_O P_L>;
                        bindings = <&m_color>;
                };
                combo_m_face {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_A P_E>;
                        bindings = <&m_face>;
                };
                combo_m_wood {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_O P_D>;
                        bindings = <&m_wood>;
                };
                combo_m_main {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_A P_I>;
                        bindings = <&m_main>;
                };
                combo_m_enough {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_N P_O>;
                        bindings = <&m_enough>;
                };
                combo_m_plain {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_L P_I>;
                        bindings = <&m_plain>;
                };
                combo_m_girl {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_I P_R>;
                        bindings = <&m_girl>;
                };
                combo_m_usual {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_U P_S P_A>;
                        bindings = <&m_usual>;
                };
                combo_m_young {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Y P_N>;
                        bindings = <&m_young>;
                };
                combo_m_ready {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_D P_Y>;
                        bindings = <&m_ready>;
                };
                combo_m_above {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_B P_O>;
                        bindings = <&m_above>;
                };
                combo_m_ever {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_V P_R>;
                        bindings = <&m_ever>;
                };
                combo_m_red {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_E P_D>;
                        bindings = <&m_red>;
                };
                combo_m_list {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_I P_S>;
                        bindings = <&m_list>;
                };
                combo_m_though {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_G>;
                        bindings = <&m_though>;
                };
                combo_m_feel {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_E P_L>;
                        bindings = <&m_feel>;
                };
                combo_m_talk {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_A P_K>;
                        bindings = <&m_talk>;
                };
                combo_m_bird {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_R>;
                        bindings = <&m_bird>;
                };
                combo_m_soon {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_O P_N>;
                        bindings = <&m_soon>;
                };
                combo_m_body {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_Y>;
                        bindings = <&m_body>;
                };
                combo_m_dog {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_G>;
                        bindings = <&m_dog>;
                };
                combo_m_family {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_A P_M>;
                        bindings = <&m_family>;
                };
                combo_m_direct {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_I P_R>;
                        bindings = <&m_direct>;
                };
                combo_m_pose {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_O P_S>;
                        bindings = <&m_pose>;
                };
                combo_m_leave {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_V>;
                        bindings = <&m_leave>;
                };
                combo_m_song {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_N P_G>;
                        bindings = <&m_song>;
                };
                combo_m_measure {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_E P_A>;
                        bindings = <&m_measure>;
                };
                combo_m_state {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_A P_E>;
                        bindings = <&m_state>;
                };
                combo_m_product {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_R P_O>;
                        bindings = <&m_product>;
                };
                combo_m_black {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_L>;
                        bindings = <&m_black>;
                };
                combo_m_short {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_H P_R>;
                        bindings = <&m_short>;
                };
                combo_m_numeral {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_U P_M>;
                        bindings = <&m_numeral>;
                };
                combo_m_class {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_L P_A>;
                        bindings = <&m_class>;
                };
                combo_m_wind {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_I P_N>;
                        bindings = <&m_wind>;
                };
                combo_m_question {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Q>;
                        bindings = <&m_question>;
                };
                combo_m_happen {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_A P_P>;
                        bindings = <&m_happen>;
                };
                combo_m_complete {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_O P_M>;
                        bindings = <&m_complete>;
                };
                combo_m_ship {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_H P_I>;
                        bindings = <&m_ship>;
                };
                combo_m_area {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_R P_E>;
                        bindings = <&m_area>;
                };
                combo_m_half {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_A P_L>;
                        bindings = <&m_half>;
                };
                combo_m_rock {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_O P_C>;
                        bindings = <&m_rock>;
                };
                combo_m_order {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_R P_D>;
                        bindings = <&m_order>;
                };
                combo_m_fire {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_I P_R P_E>;
                        bindings = <&m_fire>;
                };
                combo_m_south {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_O P_U>;
                        bindings = <&m_south>;
                };
                combo_m_problem {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_R P_B>;
                        bindings = <&m_problem>;
                };
                combo_m_piece {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_C>;
                        bindings = <&m_piece>;
                };
                combo_m_told {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_O P_L>;
                        bindings = <&m_told>;
                };
                combo_m_knew {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_K P_N>;
                        bindings = <&m_knew>;
                };
                combo_m_pass {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_A P_S>;
                        bindings = <&m_pass>;
                };
                combo_m_farm {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_R P_M>;
                        bindings = <&m_farm>;
                };
                combo_m_top {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_P>;
                        bindings = <&m_top>;
                };
                combo_m_whole {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_O P_L>;
                        bindings = <&m_whole>;
                };
                combo_m_king {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_K P_I P_N>;
                        bindings = <&m_king>;
                };
                combo_m_size {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_Z>;
                        bindings = <&m_size>;
                };
                combo_m_heard {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_R P_D>;
                        bindings = <&m_heard>;
                };
                combo_m_best {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_E P_S>;
                        bindings = <&m_best>;
                };
                combo_m_hour {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_O P_U P_R>;
                        bindings = <&m_hour>;
                };
                combo_m_better {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_E P_T>;
                        bindings = <&m_better>;
                };
                combo_m_true {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_R P_U>;
                        bindings = <&m_true>;
                };
                combo_m_during {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_U>;
                        bindings = <&m_during>;
                };
                combo_m_hundred {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_U>;
                        bindings = <&m_hundred>;
                };
                combo_m_remember {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_E P_M>;
                        bindings = <&m_remember>;
                };
                combo_m_step {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_E>;
                        bindings = <&m_step>;
                };
                combo_m_early {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_E P_A P_R P_L>;
                        bindings = <&m_early>;
                };
                combo_m_hold {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_O P_L>;
                        bindings = <&m_hold>;
                };
                combo_m_west {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_E P_S>;
                        bindings = <&m_west>;
                };
                combo_m_ground {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_R P_N>;
                        bindings = <&m_ground>;
                };
                combo_m_interest {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_I P_N P_T P_R>;
                        bindings = <&m_interest>;
                };
                combo_m_reach {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_C P_H>;
                        bindings = <&m_reach>;
                };
                combo_m_fast {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_A P_S>;
                        bindings = <&m_fast>;
                };
                combo_m_five {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_V>;
                        bindings = <&m_five>;
                };
                combo_m_sing {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_I P_N P_G>;
                        bindings = <&m_sing>;
                };
                combo_m_listen {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_I P_S P_T>;
                        bindings = <&m_listen>;
                };
                combo_m_six {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_X>;
                        bindings = <&m_six>;
                };
                combo_m_table {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_A P_B>;
                        bindings = <&m_table>;
                };
                combo_m_travel {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_R P_A>;
                        bindings = <&m_travel>;
                };
                combo_m_less {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_E P_S>;
                        bindings = <&m_less>;
                };
                combo_m_morning {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_R P_N>;
                        bindings = <&m_morning>;
                };
                combo_m_ten {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_E P_N>;
                        bindings = <&m_ten>;
                };
                combo_m_simple {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_I P_M>;
                        bindings = <&m_simple>;
                };
                combo_m_several {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_V>;
                        bindings = <&m_several>;
                };
                combo_m_vowel {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_V P_W>;
                        bindings = <&m_vowel>;
                };
                combo_m_toward {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_O P_W P_R>;
                        bindings = <&m_toward>;
                };
                combo_m_war {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_A P_R>;
                        bindings = <&m_war>;
                };
                combo_m_lay {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_Y>;
                        bindings = <&m_lay>;
                };
                combo_m_against {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_G P_I>;
                        bindings = <&m_against>;
                };
                combo_m_pattern {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_A P_T>;
                        bindings = <&m_pattern>;
                };
                combo_m_slow {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_L P_O>;
                        bindings = <&m_slow>;
                };
                combo_m_center {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_E>;
                        bindings = <&m_center>;
                };
                combo_m_love {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_O P_V>;
                        bindings = <&m_love>;
                };
                combo_m_person {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_S P_N>;
                        bindings = <&m_person>;
                };
                combo_m_money {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_O P_N>;
                        bindings = <&m_money>;
                };
                combo_m_serve {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_E P_R>;
                        bindings = <&m_serve>;
                };
                combo_m_appear {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_P P_R>;
                        bindings = <&m_appear>;
                };
                combo_m_road {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_O P_A>;
                        bindings = <&m_road>;
                };
                combo_m_map {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_P>;
                        bindings = <&m_map>;
                };
                combo_m_science {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_C P_I>;
                        bindings = <&m_science>;
                };
                combo_m_rule {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_U P_L>;
                        bindings = <&m_rule>;
                };
                combo_m_govern {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_V>;
                        bindings = <&m_govern>;
                };
                combo_m_pull {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_U P_L>;
                        bindings = <&m_pull>;
                };
                combo_m_cold {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_L P_D>;
                        bindings = <&m_cold>;
                };
                combo_m_notice {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_T P_C>;
                        bindings = <&m_notice>;
                };
                combo_m_voice {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_V P_O P_I>;
                        bindings = <&m_voice>;
                };
                combo_m_fall {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_A P_L>;
                        bindings = <&m_fall>;
                };
                combo_m_power {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_W>;
                        bindings = <&m_power>;
                };
                combo_m_town {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_O P_N>;
                        bindings = <&m_town>;
                };
                combo_m_fine {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_I P_N>;
                        bindings = <&m_fine>;
                };
                combo_m_certain {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_E P_R>;
                        bindings = <&m_certain>;
                };
                combo_m_fly {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_L P_Y>;
                        bindings = <&m_fly>;
                };
                combo_m_unit {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_U P_N P_I>;
                        bindings = <&m_unit>;
                };
                combo_m_lead {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_D>;
                        bindings = <&m_lead>;
                };
                combo_m_cry {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_R P_Y>;
                        bindings = <&m_cry>;
                };
                combo_m_dark {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_R P_K>;
                        bindings = <&m_dark>;
                };
                combo_m_machine {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_C P_H>;
                        bindings = <&m_machine>;
                };
                combo_m_note {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_O P_T P_E>;
                        bindings = <&m_note>;
                };
                combo_m_wait {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_A P_I>;
                        bindings = <&m_wait>;
                };
                combo_m_plan {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_L P_A P_N>;
                        bindings = <&m_plan>;
                };
                combo_m_figure {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_G>;
                        bindings = <&m_figure>;
                };
                combo_m_star {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_A P_R>;
                        bindings = <&m_star>;
                };
                combo_m_box {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_X>;
                        bindings = <&m_box>;
                };
                combo_m_noun {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_O P_U>;
                        bindings = <&m_noun>;
                };
                combo_m_field {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_I P_E>;
                        bindings = <&m_field>;
                };
                combo_m_correct {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_R P_T>;
                        bindings = <&m_correct>;
                };
                combo_m_able {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_B P_L>;
                        bindings = <&m_able>;
                };
                combo_m_pound {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_O P_U>;
                        bindings = <&m_pound>;
                };
                combo_m_done {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_O P_N P_E>;
                        bindings = <&m_done>;
                };
                combo_m_beauty {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_E P_A>;
                        bindings = <&m_beauty>;
                };
                combo_m_drive {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_R P_V>;
                        bindings = <&m_drive>;
                };
                combo_m_stood {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_D>;
                        bindings = <&m_stood>;
                };
                combo_m_contain {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_O P_N P_T>;
                        bindings = <&m_contain>;
                };
                combo_m_front {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_R P_O>;
                        bindings = <&m_front>;
                };
                combo_m_teach {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_C>;
                        bindings = <&m_teach>;
                };
                combo_m_week {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_E P_K>;
                        bindings = <&m_week>;
                };
                combo_m_final {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_N P_L>;
                        bindings = <&m_final>;
                };
                combo_m_gave {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_V P_E>;
                        bindings = <&m_gave>;
                };
                combo_m_green {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_R P_E>;
                        bindings = <&m_green>;
                };
                combo_m_quick {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Q P_U>;
                        bindings = <&m_quick>;
                };
                combo_m_develop {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_E P_L>;
                        bindings = <&m_develop>;
                };
                combo_m_sleep {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_L P_P>;
                        bindings = <&m_sleep>;
                };
                combo_m_warm {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_R P_M>;
                        bindings = <&m_warm>;
                };
                combo_m_free {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_R P_E>;
                        bindings = <&m_free>;
                };
                combo_m_minute {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_I P_N>;
                        bindings = <&m_minute>;
                };
                combo_m_strong {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_R P_O>;
                        bindings = <&m_strong>;
                };
                combo_m_special {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_P P_E>;
                        bindings = <&m_special>;
                };
                combo_m_mind {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_M P_N P_D>;
                        bindings = <&m_mind>;
                };
                combo_m_behind {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_H>;
                        bindings = <&m_behind>;
                };
                combo_m_clear {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_L P_E>;
                        bindings = <&m_clear>;
                };
                combo_m_tail {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_A P_I>;
                        bindings = <&m_tail>;
                };
                combo_m_produce {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_R P_D>;
                        bindings = <&m_produce>;
                };
                combo_m_fact {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_A P_C>;
                        bindings = <&m_fact>;
                };
                combo_m_inch {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_I P_N P_C>;
                        bindings = <&m_inch>;
                };
                combo_m_nothing {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_N P_O P_T P_H>;
                        bindings = <&m_nothing>;
                };
                combo_m_course {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_O P_U>;
                        bindings = <&m_course>;
                };
                combo_m_stay {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_T P_Y>;
                        bindings = <&m_stay>;
                };
                combo_m_wheel {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_H P_E P_L>;
                        bindings = <&m_wheel>;
                };
                combo_m_full {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_U>;
                        bindings = <&m_full>;
                };
                combo_m_force {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_F P_R P_C>;
                        bindings = <&m_force>;
                };
                combo_m_blue {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_L P_U>;
                        bindings = <&m_blue>;
                };
                combo_m_object {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_O P_B P_J>;
                        bindings = <&m_object>;
                };
                combo_m_decide {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_C>;
                        bindings = <&m_decide>;
                };
                combo_m_surface {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_U P_R>;
                        bindings = <&m_surface>;
                };
                combo_m_deep {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_D P_P>;
                        bindings = <&m_deep>;
                };
                combo_m_island {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_I P_S P_L P_A>;
                        bindings = <&m_island>;
                };
                combo_m_yet {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Y P_T>;
                        bindings = <&m_yet>;
                };
                combo_m_busy {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_U P_S>;
                        bindings = <&m_busy>;
                };
                combo_m_record {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_C P_D>;
                        bindings = <&m_record>;
                };
                combo_m_boat {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_O P_A P_T>;
                        bindings = <&m_boat>;
                };
                combo_m_common {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_M P_N>;
                        bindings = <&m_common>;
                };
                combo_m_gold {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_O P_L>;
                        bindings = <&m_gold>;
                };
                combo_m_possible {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_S P_B>;
                        bindings = <&m_possible>;
                };
                combo_m_plane {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_L P_A P_N P_E>;
                        bindings = <&m_plane>;
                };
                combo_m_age {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_G P_E>;
                        bindings = <&m_age>;
                };
                combo_m_wonder {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_N P_D>;
                        bindings = <&m_wonder>;
                };
                combo_m_laugh {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_A P_U>;
                        bindings = <&m_laugh>;
                };
                combo_m_thousand {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_T P_H P_O P_U>;
                        bindings = <&m_thousand>;
                };
                combo_m_ago {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_G P_O>;
                        bindings = <&m_ago>;
                };
                combo_m_ran {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_R P_A P_N>;
                        bindings = <&m_ran>;
                };
                combo_m_check {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_C P_H P_E>;
                        bindings = <&m_check>;
                };
                combo_m_game {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_G P_M>;
                        bindings = <&m_game>;
                };
                combo_m_shape {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_H P_P>;
                        bindings = <&m_shape>;
                };
                combo_m_yes {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_Y P_E P_S>;
                        bindings = <&m_yes>;
                };
                combo_m_brought {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_R P_O>;
                        bindings = <&m_brought>;
                };
                combo_m_heat {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_H P_E P_A P_T>;
                        bindings = <&m_heat>;
                };
                combo_m_snow {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_S P_N P_W>;
                        bindings = <&m_snow>;
                };
                combo_m_bed {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_E P_D>;
                        bindings = <&m_bed>;
                };
                combo_m_bring {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_B P_R P_I>;
                        bindings = <&m_bring>;
                };
                combo_m_perhaps {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_P P_E P_R>;
                        bindings = <&m_perhaps>;
                };
                combo_m_weight {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_W P_G>;
                        bindings = <&m_weight>;
                };
                combo_m_language {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_L P_N P_G>;
                        bindings = <&m_language>;
                };
                combo_m_among {
                        timeout-ms = <COMBO_TIMEOUT>;
                        key-positions = <P_COMBO P_A P_M P_O>;
                        bindings = <&m_among>;
                };

                // CHORDING COMBOS END
        };
        macros {
                // CHORDING MACROS START
                m_the: m_the {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp E &kp SPACE>;
                };
                m_and: m_and {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp N &kp D &kp SPACE>;
                };
                m_you: m_you {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Y &kp O &kp U &kp SPACE>;
                };
                m_that: m_that {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp A &kp T &kp SPACE>;
                };
                m_was: m_was {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp S &kp SPACE>;
                };
                m_for: m_for {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp O &kp R &kp SPACE>;
                };
                m_are: m_are {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp R &kp E &kp SPACE>;
                };
                m_with: m_with {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp I &kp T &kp H &kp SPACE>;
                };
                m_his: m_his {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp I &kp S &kp SPACE>;
                };
                m_they: m_they {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp E &kp Y &kp SPACE>;
                };
                m_one: m_one {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp N &kp E &kp SPACE>;
                };
                m_have: m_have {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp A &kp V &kp E &kp SPACE>;
                };
                m_this: m_this {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp I &kp S &kp SPACE>;
                };
                m_from: m_from {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp R &kp O &kp M &kp SPACE>;
                };
                m_had: m_had {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp A &kp D &kp SPACE>;
                };
                m_hot: m_hot {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp O &kp T &kp SPACE>;
                };
                m_but: m_but {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp U &kp T &kp SPACE>;
                };
                m_some: m_some {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp O &kp M &kp E &kp SPACE>;
                };
                m_what: m_what {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp A &kp T &kp SPACE>;
                };
                m_there: m_there {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp E &kp R &kp E &kp SPACE>;
                };
                m_can: m_can {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp A &kp N &kp SPACE>;
                };
                m_out: m_out {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp U &kp T &kp SPACE>;
                };
                m_other: m_other {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp T &kp H &kp E &kp R &kp SPACE>;
                };
                m_were: m_were {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp E &kp R &kp E &kp SPACE>;
                };
                m_all: m_all {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp L &kp L &kp SPACE>;
                };
                m_your: m_your {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Y &kp O &kp U &kp R &kp SPACE>;
                };
                m_when: m_when {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp E &kp N &kp SPACE>;
                };
                m_use: m_use {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp U &kp S &kp E &kp SPACE>;
                };
                m_word: m_word {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp O &kp R &kp D &kp SPACE>;
                };
                m_how: m_how {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp O &kp W &kp SPACE>;
                };
                m_said: m_said {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp A &kp I &kp D &kp SPACE>;
                };
                m_each: m_each {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp A &kp C &kp H &kp SPACE>;
                };
                m_she: m_she {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp H &kp E &kp SPACE>;
                };
                m_which: m_which {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp I &kp C &kp H &kp SPACE>;
                };
                m_their: m_their {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp E &kp I &kp R &kp SPACE>;
                };
                m_time: m_time {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp I &kp M &kp E &kp SPACE>;
                };
                m_will: m_will {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp I &kp L &kp L &kp SPACE>;
                };
                m_way: m_way {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp Y &kp SPACE>;
                };
                m_about: m_about {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp B &kp O &kp U &kp T &kp SPACE>;
                };
                m_many: m_many {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp N &kp Y &kp SPACE>;
                };
                m_then: m_then {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp E &kp N &kp SPACE>;
                };
                m_them: m_them {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp E &kp M &kp SPACE>;
                };
                m_would: m_would {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp O &kp U &kp L &kp D &kp SPACE>;
                };
                m_write: m_write {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp R &kp I &kp T &kp E &kp SPACE>;
                };
                m_like: m_like {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp K &kp E &kp SPACE>;
                };
                m_these: m_these {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp E &kp S &kp E &kp SPACE>;
                };
                m_her: m_her {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp E &kp R &kp SPACE>;
                };
                m_long: m_long {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp O &kp N &kp G &kp SPACE>;
                };
                m_make: m_make {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp K &kp E &kp SPACE>;
                };
                m_thing: m_thing {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp I &kp N &kp G &kp SPACE>;
                };
                m_see: m_see {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp E &kp SPACE>;
                };
                m_him: m_him {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp I &kp M &kp SPACE>;
                };
                m_two: m_two {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp W &kp O &kp SPACE>;
                };
                m_has: m_has {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp A &kp S &kp SPACE>;
                };
                m_look: m_look {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp O &kp O &kp K &kp SPACE>;
                };
                m_more: m_more {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp O &kp R &kp E &kp SPACE>;
                };
                m_day: m_day {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp A &kp Y &kp SPACE>;
                };
                m_could: m_could {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp U &kp L &kp D &kp SPACE>;
                };
                m_come: m_come {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp M &kp E &kp SPACE>;
                };
                m_did: m_did {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp I &kp D &kp SPACE>;
                };
                m_sound: m_sound {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp O &kp U &kp N &kp D &kp SPACE>;
                };
                m_most: m_most {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp O &kp S &kp T &kp SPACE>;
                };
                m_number: m_number {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp U &kp M &kp B &kp E &kp R &kp SPACE>;
                };
                m_who: m_who {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp O &kp SPACE>;
                };
                m_over: m_over {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp V &kp E &kp R &kp SPACE>;
                };
                m_know: m_know {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp K &kp N &kp O &kp W &kp SPACE>;
                };
                m_water: m_water {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp T &kp E &kp R &kp SPACE>;
                };
                m_than: m_than {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp A &kp N &kp SPACE>;
                };
                m_call: m_call {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp A &kp L &kp L &kp SPACE>;
                };
                m_first: m_first {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp R &kp S &kp T &kp SPACE>;
                };
                m_people: m_people {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp E &kp O &kp P &kp L &kp E &kp SPACE>;
                };
                m_may: m_may {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp Y &kp SPACE>;
                };
                m_down: m_down {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp O &kp W &kp N &kp SPACE>;
                };
                m_side: m_side {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp I &kp D &kp E &kp SPACE>;
                };
                m_been: m_been {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp E &kp N &kp SPACE>;
                };
                m_now: m_now {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp O &kp W &kp SPACE>;
                };
                m_find: m_find {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp N &kp D &kp SPACE>;
                };
                m_any: m_any {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp N &kp Y &kp SPACE>;
                };
                m_new: m_new {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp E &kp W &kp SPACE>;
                };
                m_work: m_work {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp O &kp R &kp K &kp SPACE>;
                };
                m_part: m_part {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp A &kp R &kp T &kp SPACE>;
                };
                m_take: m_take {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp A &kp K &kp E &kp SPACE>;
                };
                m_get: m_get {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp E &kp T &kp SPACE>;
                };
                m_place: m_place {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp L &kp A &kp C &kp E &kp SPACE>;
                };
                m_made: m_made {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp D &kp E &kp SPACE>;
                };
                m_live: m_live {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp V &kp E &kp SPACE>;
                };
                m_where: m_where {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp E &kp R &kp E &kp SPACE>;
                };
                m_after: m_after {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp F &kp T &kp E &kp R &kp SPACE>;
                };
                m_back: m_back {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp A &kp C &kp K &kp SPACE>;
                };
                m_little: m_little {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp T &kp T &kp L &kp E &kp SPACE>;
                };
                m_only: m_only {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp N &kp L &kp Y &kp SPACE>;
                };
                m_round: m_round {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp O &kp U &kp N &kp D &kp SPACE>;
                };
                m_man: m_man {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp N &kp SPACE>;
                };
                m_year: m_year {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Y &kp E &kp A &kp R &kp SPACE>;
                };
                m_came: m_came {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp A &kp M &kp E &kp SPACE>;
                };
                m_show: m_show {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp H &kp O &kp W &kp SPACE>;
                };
                m_every: m_every {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp V &kp E &kp R &kp Y &kp SPACE>;
                };
                m_good: m_good {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp O &kp O &kp D &kp SPACE>;
                };
                m_give: m_give {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp I &kp V &kp E &kp SPACE>;
                };
                m_our: m_our {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp U &kp R &kp SPACE>;
                };
                m_under: m_under {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp U &kp N &kp D &kp E &kp R &kp SPACE>;
                };
                m_name: m_name {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp A &kp M &kp E &kp SPACE>;
                };
                m_very: m_very {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp V &kp E &kp R &kp Y &kp SPACE>;
                };
                m_through: m_through {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp R &kp O &kp U &kp G &kp H &kp SPACE>;
                };
                m_just: m_just {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp J &kp U &kp S &kp T &kp SPACE>;
                };
                m_form: m_form {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp O &kp R &kp M &kp SPACE>;
                };
                m_much: m_much {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp U &kp C &kp H &kp SPACE>;
                };
                m_great: m_great {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp R &kp E &kp A &kp T &kp SPACE>;
                };
                m_think: m_think {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp I &kp N &kp K &kp SPACE>;
                };
                m_say: m_say {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp A &kp Y &kp SPACE>;
                };
                m_help: m_help {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp E &kp L &kp P &kp SPACE>;
                };
                m_low: m_low {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp O &kp W &kp SPACE>;
                };
                m_line: m_line {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp N &kp E &kp SPACE>;
                };
                m_before: m_before {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp F &kp O &kp R &kp E &kp SPACE>;
                };
                m_turn: m_turn {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp U &kp R &kp N &kp SPACE>;
                };
                m_cause: m_cause {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp A &kp U &kp S &kp E &kp SPACE>;
                };
                m_same: m_same {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp A &kp M &kp E &kp SPACE>;
                };
                m_mean: m_mean {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp E &kp A &kp N &kp SPACE>;
                };
                m_differ: m_differ {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp I &kp F &kp F &kp E &kp R &kp SPACE>;
                };
                m_move: m_move {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp O &kp V &kp E &kp SPACE>;
                };
                m_right: m_right {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp I &kp G &kp H &kp T &kp SPACE>;
                };
                m_boy: m_boy {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp O &kp Y &kp SPACE>;
                };
                m_old: m_old {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp L &kp D &kp SPACE>;
                };
                m_too: m_too {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp O &kp O &kp SPACE>;
                };
                m_does: m_does {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp O &kp E &kp S &kp SPACE>;
                };
                m_tell: m_tell {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp E &kp L &kp L &kp SPACE>;
                };
                m_sentence: m_sentence {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp N &kp T &kp E &kp N &kp C &kp E &kp SPACE>;
                };
                m_set: m_set {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp T &kp SPACE>;
                };
                m_three: m_three {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp R &kp E &kp E &kp SPACE>;
                };
                m_want: m_want {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp N &kp T &kp SPACE>;
                };
                m_air: m_air {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp I &kp R &kp SPACE>;
                };
                m_well: m_well {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp E &kp L &kp L &kp SPACE>;
                };
                m_also: m_also {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp L &kp S &kp O &kp SPACE>;
                };
                m_play: m_play {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp L &kp A &kp Y &kp SPACE>;
                };
                m_small: m_small {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp M &kp A &kp L &kp L &kp SPACE>;
                };
                m_end: m_end {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp N &kp D &kp SPACE>;
                };
                m_put: m_put {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp U &kp T &kp SPACE>;
                };
                m_home: m_home {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp O &kp M &kp E &kp SPACE>;
                };
                m_read: m_read {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp E &kp A &kp D &kp SPACE>;
                };
                m_hand: m_hand {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp A &kp N &kp D &kp SPACE>;
                };
                m_port: m_port {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp O &kp R &kp T &kp SPACE>;
                };
                m_large: m_large {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp A &kp R &kp G &kp E &kp SPACE>;
                };
                m_spell: m_spell {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp P &kp E &kp L &kp L &kp SPACE>;
                };
                m_add: m_add {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp D &kp D &kp SPACE>;
                };
                m_even: m_even {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp V &kp E &kp N &kp SPACE>;
                };
                m_land: m_land {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp A &kp N &kp D &kp SPACE>;
                };
                m_here: m_here {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp E &kp R &kp E &kp SPACE>;
                };
                m_must: m_must {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp U &kp S &kp T &kp SPACE>;
                };
                m_big: m_big {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp I &kp G &kp SPACE>;
                };
                m_high: m_high {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp I &kp G &kp H &kp SPACE>;
                };
                m_such: m_such {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp U &kp C &kp H &kp SPACE>;
                };
                m_follow: m_follow {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp O &kp L &kp L &kp O &kp W &kp SPACE>;
                };
                m_act: m_act {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp C &kp T &kp SPACE>;
                };
                m_why: m_why {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp Y &kp SPACE>;
                };
                m_ask: m_ask {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp S &kp K &kp SPACE>;
                };
                m_men: m_men {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp E &kp N &kp SPACE>;
                };
                m_change: m_change {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp H &kp A &kp N &kp G &kp E &kp SPACE>;
                };
                m_went: m_went {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp E &kp N &kp T &kp SPACE>;
                };
                m_light: m_light {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp G &kp H &kp T &kp SPACE>;
                };
                m_kind: m_kind {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp K &kp I &kp N &kp D &kp SPACE>;
                };
                m_off: m_off {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp F &kp F &kp SPACE>;
                };
                m_need: m_need {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp E &kp E &kp D &kp SPACE>;
                };
                m_house: m_house {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp O &kp U &kp S &kp E &kp SPACE>;
                };
                m_picture: m_picture {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp I &kp C &kp T &kp U &kp R &kp E &kp SPACE>;
                };
                m_try: m_try {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp R &kp Y &kp SPACE>;
                };
                m_again: m_again {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp G &kp A &kp I &kp N &kp SPACE>;
                };
                m_animal: m_animal {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp N &kp I &kp M &kp A &kp L &kp SPACE>;
                };
                m_point: m_point {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp O &kp I &kp N &kp T &kp SPACE>;
                };
                m_mother: m_mother {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp O &kp T &kp H &kp E &kp R &kp SPACE>;
                };
                m_world: m_world {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp O &kp R &kp L &kp D &kp SPACE>;
                };
                m_near: m_near {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp E &kp A &kp R &kp SPACE>;
                };
                m_build: m_build {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp U &kp I &kp L &kp D &kp SPACE>;
                };
                m_self: m_self {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp L &kp F &kp SPACE>;
                };
                m_earth: m_earth {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp A &kp R &kp T &kp H &kp SPACE>;
                };
                m_father: m_father {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp T &kp H &kp E &kp R &kp SPACE>;
                };
                m_head: m_head {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp E &kp A &kp D &kp SPACE>;
                };
                m_stand: m_stand {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp A &kp N &kp D &kp SPACE>;
                };
                m_own: m_own {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp W &kp N &kp SPACE>;
                };
                m_page: m_page {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp A &kp G &kp E &kp SPACE>;
                };
                m_should: m_should {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp H &kp O &kp U &kp L &kp D &kp SPACE>;
                };
                m_country: m_country {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp U &kp N &kp T &kp R &kp Y &kp SPACE>;
                };
                m_found: m_found {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp O &kp U &kp N &kp D &kp SPACE>;
                };
                m_answer: m_answer {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp N &kp S &kp W &kp E &kp R &kp SPACE>;
                };
                m_school: m_school {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp C &kp H &kp O &kp O &kp L &kp SPACE>;
                };
                m_grow: m_grow {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp R &kp O &kp W &kp SPACE>;
                };
                m_study: m_study {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp U &kp D &kp Y &kp SPACE>;
                };
                m_still: m_still {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp I &kp L &kp L &kp SPACE>;
                };
                m_learn: m_learn {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp E &kp A &kp R &kp N &kp SPACE>;
                };
                m_plant: m_plant {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp L &kp A &kp N &kp T &kp SPACE>;
                };
                m_cover: m_cover {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp V &kp E &kp R &kp SPACE>;
                };
                m_food: m_food {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp O &kp O &kp D &kp SPACE>;
                };
                m_sun: m_sun {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp U &kp N &kp SPACE>;
                };
                m_four: m_four {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp O &kp U &kp R &kp SPACE>;
                };
                m_thought: m_thought {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp O &kp U &kp G &kp H &kp T &kp SPACE>;
                };
                m_let: m_let {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp E &kp T &kp SPACE>;
                };
                m_keep: m_keep {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp K &kp E &kp E &kp P &kp SPACE>;
                };
                m_eye: m_eye {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp Y &kp E &kp SPACE>;
                };
                m_never: m_never {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp E &kp V &kp E &kp R &kp SPACE>;
                };
                m_last: m_last {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp A &kp S &kp T &kp SPACE>;
                };
                m_door: m_door {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp O &kp O &kp R &kp SPACE>;
                };
                m_between: m_between {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp T &kp W &kp E &kp E &kp N &kp SPACE>;
                };
                m_city: m_city {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp I &kp T &kp Y &kp SPACE>;
                };
                m_tree: m_tree {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp R &kp E &kp E &kp SPACE>;
                };
                m_cross: m_cross {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp R &kp O &kp S &kp S &kp SPACE>;
                };
                m_since: m_since {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp I &kp N &kp C &kp E &kp SPACE>;
                };
                m_hard: m_hard {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp A &kp R &kp D &kp SPACE>;
                };
                m_start: m_start {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp A &kp R &kp T &kp SPACE>;
                };
                m_might: m_might {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp I &kp G &kp H &kp T &kp SPACE>;
                };
                m_story: m_story {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp O &kp R &kp Y &kp SPACE>;
                };
                m_saw: m_saw {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp A &kp W &kp SPACE>;
                };
                m_far: m_far {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp R &kp SPACE>;
                };
                m_draw: m_draw {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp R &kp A &kp W &kp SPACE>;
                };
                m_left: m_left {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp E &kp F &kp T &kp SPACE>;
                };
                m_late: m_late {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp A &kp T &kp E &kp SPACE>;
                };
                m_run: m_run {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp U &kp N &kp SPACE>;
                };
                m_donSQTt: m_donSQTt {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp O &kp N &kp SQT &kp T &kp SPACE>;
                };
                m_while: m_while {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp I &kp L &kp E &kp SPACE>;
                };
                m_press: m_press {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp R &kp E &kp S &kp S &kp SPACE>;
                };
                m_close: m_close {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp L &kp O &kp S &kp E &kp SPACE>;
                };
                m_night: m_night {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp I &kp G &kp H &kp T &kp SPACE>;
                };
                m_real: m_real {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp E &kp A &kp L &kp SPACE>;
                };
                m_life: m_life {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp F &kp E &kp SPACE>;
                };
                m_few: m_few {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp E &kp W &kp SPACE>;
                };
                m_stop: m_stop {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp O &kp P &kp SPACE>;
                };
                m_open: m_open {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp P &kp E &kp N &kp SPACE>;
                };
                m_seem: m_seem {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp E &kp M &kp SPACE>;
                };
                m_together: m_together {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp O &kp G &kp E &kp T &kp H &kp E &kp R &kp SPACE>;
                };
                m_next: m_next {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp E &kp X &kp T &kp SPACE>;
                };
                m_white: m_white {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp I &kp T &kp E &kp SPACE>;
                };
                m_children: m_children {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp H &kp I &kp L &kp D &kp R &kp E &kp N &kp SPACE>;
                };
                m_begin: m_begin {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp G &kp I &kp N &kp SPACE>;
                };
                m_got: m_got {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp O &kp T &kp SPACE>;
                };
                m_walk: m_walk {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp L &kp K &kp SPACE>;
                };
                m_example: m_example {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp X &kp A &kp M &kp P &kp L &kp E &kp SPACE>;
                };
                m_ease: m_ease {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp A &kp S &kp E &kp SPACE>;
                };
                m_paper: m_paper {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp A &kp P &kp E &kp R &kp SPACE>;
                };
                m_often: m_often {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp F &kp T &kp E &kp N &kp SPACE>;
                };
                m_always: m_always {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp L &kp W &kp A &kp Y &kp S &kp SPACE>;
                };
                m_music: m_music {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp U &kp S &kp I &kp C &kp SPACE>;
                };
                m_those: m_those {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp O &kp S &kp E &kp SPACE>;
                };
                m_both: m_both {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp O &kp T &kp H &kp SPACE>;
                };
                m_mark: m_mark {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp R &kp K &kp SPACE>;
                };
                m_book: m_book {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp O &kp O &kp K &kp SPACE>;
                };
                m_letter: m_letter {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp E &kp T &kp T &kp E &kp R &kp SPACE>;
                };
                m_until: m_until {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp U &kp N &kp T &kp I &kp L &kp SPACE>;
                };
                m_mile: m_mile {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp I &kp L &kp E &kp SPACE>;
                };
                m_river: m_river {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp I &kp V &kp E &kp R &kp SPACE>;
                };
                m_car: m_car {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp A &kp R &kp SPACE>;
                };
                m_feet: m_feet {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp E &kp E &kp T &kp SPACE>;
                };
                m_care: m_care {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp A &kp R &kp E &kp SPACE>;
                };
                m_second: m_second {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp C &kp O &kp N &kp D &kp SPACE>;
                };
                m_group: m_group {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp R &kp O &kp U &kp P &kp SPACE>;
                };
                m_carry: m_carry {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp A &kp R &kp R &kp Y &kp SPACE>;
                };
                m_took: m_took {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp O &kp O &kp K &kp SPACE>;
                };
                m_rain: m_rain {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp A &kp I &kp N &kp SPACE>;
                };
                m_eat: m_eat {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp A &kp T &kp SPACE>;
                };
                m_room: m_room {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp O &kp O &kp M &kp SPACE>;
                };
                m_friend: m_friend {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp R &kp I &kp E &kp N &kp D &kp SPACE>;
                };
                m_began: m_began {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp G &kp A &kp N &kp SPACE>;
                };
                m_idea: m_idea {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp I &kp D &kp E &kp A &kp SPACE>;
                };
                m_fish: m_fish {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp S &kp H &kp SPACE>;
                };
                m_mountain: m_mountain {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp O &kp U &kp N &kp T &kp A &kp I &kp N &kp SPACE>;
                };
                m_north: m_north {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp O &kp R &kp T &kp H &kp SPACE>;
                };
                m_once: m_once {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp N &kp C &kp E &kp SPACE>;
                };
                m_base: m_base {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp A &kp S &kp E &kp SPACE>;
                };
                m_hear: m_hear {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp E &kp A &kp R &kp SPACE>;
                };
                m_horse: m_horse {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp O &kp R &kp S &kp E &kp SPACE>;
                };
                m_cut: m_cut {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp U &kp T &kp SPACE>;
                };
                m_sure: m_sure {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp U &kp R &kp E &kp SPACE>;
                };
                m_watch: m_watch {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp T &kp C &kp H &kp SPACE>;
                };
                m_color: m_color {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp L &kp O &kp R &kp SPACE>;
                };
                m_face: m_face {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp C &kp E &kp SPACE>;
                };
                m_wood: m_wood {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp O &kp O &kp D &kp SPACE>;
                };
                m_main: m_main {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp I &kp N &kp SPACE>;
                };
                m_enough: m_enough {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp N &kp O &kp U &kp G &kp H &kp SPACE>;
                };
                m_plain: m_plain {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp L &kp A &kp I &kp N &kp SPACE>;
                };
                m_girl: m_girl {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp I &kp R &kp L &kp SPACE>;
                };
                m_usual: m_usual {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp U &kp S &kp U &kp A &kp L &kp SPACE>;
                };
                m_young: m_young {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Y &kp O &kp U &kp N &kp G &kp SPACE>;
                };
                m_ready: m_ready {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp E &kp A &kp D &kp Y &kp SPACE>;
                };
                m_above: m_above {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp B &kp O &kp V &kp E &kp SPACE>;
                };
                m_ever: m_ever {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp V &kp E &kp R &kp SPACE>;
                };
                m_red: m_red {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp E &kp D &kp SPACE>;
                };
                m_list: m_list {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp S &kp T &kp SPACE>;
                };
                m_though: m_though {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp O &kp U &kp G &kp H &kp SPACE>;
                };
                m_feel: m_feel {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp E &kp E &kp L &kp SPACE>;
                };
                m_talk: m_talk {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp A &kp L &kp K &kp SPACE>;
                };
                m_bird: m_bird {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp I &kp R &kp D &kp SPACE>;
                };
                m_soon: m_soon {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp O &kp O &kp N &kp SPACE>;
                };
                m_body: m_body {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp O &kp D &kp Y &kp SPACE>;
                };
                m_dog: m_dog {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp O &kp G &kp SPACE>;
                };
                m_family: m_family {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp M &kp I &kp L &kp Y &kp SPACE>;
                };
                m_direct: m_direct {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp I &kp R &kp E &kp C &kp T &kp SPACE>;
                };
                m_pose: m_pose {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp O &kp S &kp E &kp SPACE>;
                };
                m_leave: m_leave {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp E &kp A &kp V &kp E &kp SPACE>;
                };
                m_song: m_song {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp O &kp N &kp G &kp SPACE>;
                };
                m_measure: m_measure {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp E &kp A &kp S &kp U &kp R &kp E &kp SPACE>;
                };
                m_state: m_state {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp A &kp T &kp E &kp SPACE>;
                };
                m_product: m_product {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp R &kp O &kp D &kp U &kp C &kp T &kp SPACE>;
                };
                m_black: m_black {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp L &kp A &kp C &kp K &kp SPACE>;
                };
                m_short: m_short {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp H &kp O &kp R &kp T &kp SPACE>;
                };
                m_numeral: m_numeral {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp U &kp M &kp E &kp R &kp A &kp L &kp SPACE>;
                };
                m_class: m_class {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp L &kp A &kp S &kp S &kp SPACE>;
                };
                m_wind: m_wind {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp I &kp N &kp D &kp SPACE>;
                };
                m_question: m_question {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Q &kp U &kp E &kp S &kp T &kp I &kp O &kp N &kp SPACE>;
                };
                m_happen: m_happen {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp A &kp P &kp P &kp E &kp N &kp SPACE>;
                };
                m_complete: m_complete {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp M &kp P &kp L &kp E &kp T &kp E &kp SPACE>;
                };
                m_ship: m_ship {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp H &kp I &kp P &kp SPACE>;
                };
                m_area: m_area {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp R &kp E &kp A &kp SPACE>;
                };
                m_half: m_half {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp A &kp L &kp F &kp SPACE>;
                };
                m_rock: m_rock {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp O &kp C &kp K &kp SPACE>;
                };
                m_order: m_order {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp R &kp D &kp E &kp R &kp SPACE>;
                };
                m_fire: m_fire {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp R &kp E &kp SPACE>;
                };
                m_south: m_south {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp O &kp U &kp T &kp H &kp SPACE>;
                };
                m_problem: m_problem {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp R &kp O &kp B &kp L &kp E &kp M &kp SPACE>;
                };
                m_piece: m_piece {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp I &kp E &kp C &kp E &kp SPACE>;
                };
                m_told: m_told {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp O &kp L &kp D &kp SPACE>;
                };
                m_knew: m_knew {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp K &kp N &kp E &kp W &kp SPACE>;
                };
                m_pass: m_pass {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp A &kp S &kp S &kp SPACE>;
                };
                m_farm: m_farm {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp R &kp M &kp SPACE>;
                };
                m_top: m_top {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp O &kp P &kp SPACE>;
                };
                m_whole: m_whole {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp O &kp L &kp E &kp SPACE>;
                };
                m_king: m_king {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp K &kp I &kp N &kp G &kp SPACE>;
                };
                m_size: m_size {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp I &kp Z &kp E &kp SPACE>;
                };
                m_heard: m_heard {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp E &kp A &kp R &kp D &kp SPACE>;
                };
                m_best: m_best {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp S &kp T &kp SPACE>;
                };
                m_hour: m_hour {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp O &kp U &kp R &kp SPACE>;
                };
                m_better: m_better {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp T &kp T &kp E &kp R &kp SPACE>;
                };
                m_true: m_true {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp R &kp U &kp E &kp SPACE>;
                };
                m_during: m_during {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp U &kp R &kp I &kp N &kp G &kp SPACE>;
                };
                m_hundred: m_hundred {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp U &kp N &kp D &kp R &kp E &kp D &kp SPACE>;
                };
                m_remember: m_remember {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp E &kp M &kp E &kp M &kp B &kp E &kp R &kp SPACE>;
                };
                m_step: m_step {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp E &kp P &kp SPACE>;
                };
                m_early: m_early {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp E &kp A &kp R &kp L &kp Y &kp SPACE>;
                };
                m_hold: m_hold {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp O &kp L &kp D &kp SPACE>;
                };
                m_west: m_west {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp E &kp S &kp T &kp SPACE>;
                };
                m_ground: m_ground {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp R &kp O &kp U &kp N &kp D &kp SPACE>;
                };
                m_interest: m_interest {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp I &kp N &kp T &kp E &kp R &kp E &kp S &kp T &kp SPACE>;
                };
                m_reach: m_reach {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp E &kp A &kp C &kp H &kp SPACE>;
                };
                m_fast: m_fast {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp S &kp T &kp SPACE>;
                };
                m_five: m_five {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp V &kp E &kp SPACE>;
                };
                m_sing: m_sing {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp I &kp N &kp G &kp SPACE>;
                };
                m_listen: m_listen {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp I &kp S &kp T &kp E &kp N &kp SPACE>;
                };
                m_six: m_six {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp I &kp X &kp SPACE>;
                };
                m_table: m_table {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp A &kp B &kp L &kp E &kp SPACE>;
                };
                m_travel: m_travel {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp R &kp A &kp V &kp E &kp L &kp SPACE>;
                };
                m_less: m_less {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp E &kp S &kp S &kp SPACE>;
                };
                m_morning: m_morning {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp O &kp R &kp N &kp I &kp N &kp G &kp SPACE>;
                };
                m_ten: m_ten {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp E &kp N &kp SPACE>;
                };
                m_simple: m_simple {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp I &kp M &kp P &kp L &kp E &kp SPACE>;
                };
                m_several: m_several {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp V &kp E &kp R &kp A &kp L &kp SPACE>;
                };
                m_vowel: m_vowel {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp V &kp O &kp W &kp E &kp L &kp SPACE>;
                };
                m_toward: m_toward {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp O &kp W &kp A &kp R &kp D &kp SPACE>;
                };
                m_war: m_war {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp R &kp SPACE>;
                };
                m_lay: m_lay {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp A &kp Y &kp SPACE>;
                };
                m_against: m_against {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp G &kp A &kp I &kp N &kp S &kp T &kp SPACE>;
                };
                m_pattern: m_pattern {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp A &kp T &kp T &kp E &kp R &kp N &kp SPACE>;
                };
                m_slow: m_slow {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp L &kp O &kp W &kp SPACE>;
                };
                m_center: m_center {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp E &kp N &kp T &kp E &kp R &kp SPACE>;
                };
                m_love: m_love {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp O &kp V &kp E &kp SPACE>;
                };
                m_person: m_person {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp E &kp R &kp S &kp O &kp N &kp SPACE>;
                };
                m_money: m_money {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp O &kp N &kp E &kp Y &kp SPACE>;
                };
                m_serve: m_serve {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp E &kp R &kp V &kp E &kp SPACE>;
                };
                m_appear: m_appear {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp P &kp P &kp E &kp A &kp R &kp SPACE>;
                };
                m_road: m_road {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp O &kp A &kp D &kp SPACE>;
                };
                m_map: m_map {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp P &kp SPACE>;
                };
                m_science: m_science {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp C &kp I &kp E &kp N &kp C &kp E &kp SPACE>;
                };
                m_rule: m_rule {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp U &kp L &kp E &kp SPACE>;
                };
                m_govern: m_govern {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp O &kp V &kp E &kp R &kp N &kp SPACE>;
                };
                m_pull: m_pull {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp U &kp L &kp L &kp SPACE>;
                };
                m_cold: m_cold {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp L &kp D &kp SPACE>;
                };
                m_notice: m_notice {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp O &kp T &kp I &kp C &kp E &kp SPACE>;
                };
                m_voice: m_voice {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp V &kp O &kp I &kp C &kp E &kp SPACE>;
                };
                m_fall: m_fall {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp L &kp L &kp SPACE>;
                };
                m_power: m_power {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp O &kp W &kp E &kp R &kp SPACE>;
                };
                m_town: m_town {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp O &kp W &kp N &kp SPACE>;
                };
                m_fine: m_fine {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp N &kp E &kp SPACE>;
                };
                m_certain: m_certain {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp E &kp R &kp T &kp A &kp I &kp N &kp SPACE>;
                };
                m_fly: m_fly {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp L &kp Y &kp SPACE>;
                };
                m_unit: m_unit {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp U &kp N &kp I &kp T &kp SPACE>;
                };
                m_lead: m_lead {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp E &kp A &kp D &kp SPACE>;
                };
                m_cry: m_cry {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp R &kp Y &kp SPACE>;
                };
                m_dark: m_dark {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp A &kp R &kp K &kp SPACE>;
                };
                m_machine: m_machine {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp A &kp C &kp H &kp I &kp N &kp E &kp SPACE>;
                };
                m_note: m_note {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp O &kp T &kp E &kp SPACE>;
                };
                m_wait: m_wait {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp I &kp T &kp SPACE>;
                };
                m_plan: m_plan {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp L &kp A &kp N &kp SPACE>;
                };
                m_figure: m_figure {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp G &kp U &kp R &kp E &kp SPACE>;
                };
                m_star: m_star {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp A &kp R &kp SPACE>;
                };
                m_box: m_box {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp O &kp X &kp SPACE>;
                };
                m_noun: m_noun {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp O &kp U &kp N &kp SPACE>;
                };
                m_field: m_field {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp E &kp L &kp D &kp SPACE>;
                };
                m_correct: m_correct {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp R &kp R &kp E &kp C &kp T &kp SPACE>;
                };
                m_able: m_able {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp B &kp L &kp E &kp SPACE>;
                };
                m_pound: m_pound {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp O &kp U &kp N &kp D &kp SPACE>;
                };
                m_done: m_done {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp O &kp N &kp E &kp SPACE>;
                };
                m_beauty: m_beauty {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp A &kp U &kp T &kp Y &kp SPACE>;
                };
                m_drive: m_drive {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp R &kp I &kp V &kp E &kp SPACE>;
                };
                m_stood: m_stood {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp O &kp O &kp D &kp SPACE>;
                };
                m_contain: m_contain {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp N &kp T &kp A &kp I &kp N &kp SPACE>;
                };
                m_front: m_front {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp R &kp O &kp N &kp T &kp SPACE>;
                };
                m_teach: m_teach {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp E &kp A &kp C &kp H &kp SPACE>;
                };
                m_week: m_week {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp E &kp E &kp K &kp SPACE>;
                };
                m_final: m_final {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp I &kp N &kp A &kp L &kp SPACE>;
                };
                m_gave: m_gave {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp A &kp V &kp E &kp SPACE>;
                };
                m_green: m_green {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp R &kp E &kp E &kp N &kp SPACE>;
                };
                m_quick: m_quick {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Q &kp U &kp I &kp C &kp K &kp SPACE>;
                };
                m_develop: m_develop {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp E &kp V &kp E &kp L &kp O &kp P &kp SPACE>;
                };
                m_sleep: m_sleep {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp L &kp E &kp E &kp P &kp SPACE>;
                };
                m_warm: m_warm {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp A &kp R &kp M &kp SPACE>;
                };
                m_free: m_free {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp R &kp E &kp E &kp SPACE>;
                };
                m_minute: m_minute {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp I &kp N &kp U &kp T &kp E &kp SPACE>;
                };
                m_strong: m_strong {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp R &kp O &kp N &kp G &kp SPACE>;
                };
                m_special: m_special {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp P &kp E &kp C &kp I &kp A &kp L &kp SPACE>;
                };
                m_mind: m_mind {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp M &kp I &kp N &kp D &kp SPACE>;
                };
                m_behind: m_behind {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp H &kp I &kp N &kp D &kp SPACE>;
                };
                m_clear: m_clear {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp L &kp E &kp A &kp R &kp SPACE>;
                };
                m_tail: m_tail {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp A &kp I &kp L &kp SPACE>;
                };
                m_produce: m_produce {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp R &kp O &kp D &kp U &kp C &kp E &kp SPACE>;
                };
                m_fact: m_fact {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp A &kp C &kp T &kp SPACE>;
                };
                m_inch: m_inch {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp I &kp N &kp C &kp H &kp SPACE>;
                };
                m_nothing: m_nothing {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp N &kp O &kp T &kp H &kp I &kp N &kp G &kp SPACE>;
                };
                m_course: m_course {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp U &kp R &kp S &kp E &kp SPACE>;
                };
                m_stay: m_stay {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp T &kp A &kp Y &kp SPACE>;
                };
                m_wheel: m_wheel {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp H &kp E &kp E &kp L &kp SPACE>;
                };
                m_full: m_full {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp U &kp L &kp L &kp SPACE>;
                };
                m_force: m_force {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp F &kp O &kp R &kp C &kp E &kp SPACE>;
                };
                m_blue: m_blue {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp L &kp U &kp E &kp SPACE>;
                };
                m_object: m_object {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp O &kp B &kp J &kp E &kp C &kp T &kp SPACE>;
                };
                m_decide: m_decide {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp E &kp C &kp I &kp D &kp E &kp SPACE>;
                };
                m_surface: m_surface {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp U &kp R &kp F &kp A &kp C &kp E &kp SPACE>;
                };
                m_deep: m_deep {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp D &kp E &kp E &kp P &kp SPACE>;
                };
                m_island: m_island {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp I &kp S &kp L &kp A &kp N &kp D &kp SPACE>;
                };
                m_yet: m_yet {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Y &kp E &kp T &kp SPACE>;
                };
                m_busy: m_busy {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp U &kp S &kp Y &kp SPACE>;
                };
                m_record: m_record {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp E &kp C &kp O &kp R &kp D &kp SPACE>;
                };
                m_boat: m_boat {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp O &kp A &kp T &kp SPACE>;
                };
                m_common: m_common {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp O &kp M &kp M &kp O &kp N &kp SPACE>;
                };
                m_gold: m_gold {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp O &kp L &kp D &kp SPACE>;
                };
                m_possible: m_possible {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp O &kp S &kp S &kp I &kp B &kp L &kp E &kp SPACE>;
                };
                m_plane: m_plane {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp L &kp A &kp N &kp E &kp SPACE>;
                };
                m_age: m_age {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp G &kp E &kp SPACE>;
                };
                m_wonder: m_wonder {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp O &kp N &kp D &kp E &kp R &kp SPACE>;
                };
                m_laugh: m_laugh {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp A &kp U &kp G &kp H &kp SPACE>;
                };
                m_thousand: m_thousand {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp T &kp H &kp O &kp U &kp S &kp A &kp N &kp D &kp SPACE>;
                };
                m_ago: m_ago {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp G &kp O &kp SPACE>;
                };
                m_ran: m_ran {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp R &kp A &kp N &kp SPACE>;
                };
                m_check: m_check {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp C &kp H &kp E &kp C &kp K &kp SPACE>;
                };
                m_game: m_game {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp G &kp A &kp M &kp E &kp SPACE>;
                };
                m_shape: m_shape {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp H &kp A &kp P &kp E &kp SPACE>;
                };
                m_yes: m_yes {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp Y &kp E &kp S &kp SPACE>;
                };
                m_brought: m_brought {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp R &kp O &kp U &kp G &kp H &kp T &kp SPACE>;
                };
                m_heat: m_heat {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp H &kp E &kp A &kp T &kp SPACE>;
                };
                m_snow: m_snow {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp S &kp N &kp O &kp W &kp SPACE>;
                };
                m_bed: m_bed {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp E &kp D &kp SPACE>;
                };
                m_bring: m_bring {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp B &kp R &kp I &kp N &kp G &kp SPACE>;
                };
                m_perhaps: m_perhaps {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp P &kp E &kp R &kp H &kp A &kp P &kp S &kp SPACE>;
                };
                m_weight: m_weight {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp W &kp E &kp I &kp G &kp H &kp T &kp SPACE>;
                };
                m_language: m_language {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp L &kp A &kp N &kp G &kp U &kp A &kp G &kp E &kp SPACE>;
                };
                m_among: m_among {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings = <&kp A &kp M &kp O &kp N &kp G &kp SPACE>;
                };

                // CHORDING MACROS END
                focus_arc: focus_arc {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                , <&macro_tap &kp FR_Q>
                                , <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                ;
                };
                focus_slack: focus_slack {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                , <&macro_tap &kp FR_W>
                                , <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                ;
                };
                focus_mail: focus_mail {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                , <&macro_tap &kp FR_F>
                                , <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                ;
                };
                focus_term: focus_term {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                , <&macro_tap &kp FR_P>
                                , <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                ;
                };
                focus_vscode: focus_vscode {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                , <&macro_tap &kp FR_G>
                                , <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>
                                ;
                };
                show_emojis: show_emojis {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LCTRL &kp LGUI>
                                , <&macro_tap &kp SPACE>
                                , <&macro_release &kp LCTRL &kp LGUI>
                                ;
                };
                screen_capture: screen_capture {
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LSHFT &kp LCTRL &kp LGUI>
                                , <&macro_tap &kp FR_4>
                                , <&macro_release &kp LSHFT &kp LCTRL &kp LGUI>
                                ;
                };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "default";

// -----------------------------------------------------------------------------------------------
// | Q       |  W       |  F      |  P    |  G      |   | J   |  L   |  U    |  Y     |  ;       |
// | A       |  R       |  S      |  T    |  D      |   | H   |  N   |  E    |  I     |  O       |
// | SHFT/Z  |  CTRL/X  |  ALT/C  |  V    |  B      |   | N   |  M   | ALT/, | CTRL/. |  SHFT//  |
//                                | RAISE | SPC/GUI |   | LWR | BKSP |
                        bindings = <
   &kp FR_Q        &kp FR_W        &kp FR_F      &kp FR_P   &kp FR_G         &kp FR_J    &kp FR_L    &kp FR_U         &kp FR_Y         &kp FR_SCLN  
   &kp FR_A        &kp FR_R        &kp FR_S      &kp FR_T   &kp FR_D         &kp FR_H    &kp FR_N    &kp FR_E         &kp FR_I         &kp FR_O           
   &hm LSHFT FR_Z  &hm LCTRL FR_X  &hm LALT FR_C &kp FR_V   &kp FR_B         &kp FR_K    &kp FR_M    &hm RALT FR_COMM &hm RCTRL FR_DOT &hm RSHFT FR_SLSH  
                                                 &mo RAISE  &hm LGUI SPACE   &mo LOWER   &mo NUM
                        >;

                };
                lower_layer {
                        label = "lower";

// --------------------------------------------------------------------------------
// |  ADJUST/! |  @  |  {   |  }   |  |       |   |  ¨   |  ´  |  ^  |  `  |  :   |
// |  #        |  $  |  (   |  )   |  `       |   |  ENT | LFT | DWN |  UP |  RGT |
// |  %        |  ^  |  [   |  ]   |  ~       |   |  &   |  =  |  <  |  >  |  ?   |
//                          | SHFT | SPC/GUI  |   |      | DEL |
                        bindings = <
   &lt ADJUST FR_EXLM  &kp FR_AT    &kp FR_LBRC  &kp FR_RBRC  &kp FR_PIPE      &kp FR_DIAE   &kp FR_ACUT    &kp FR_CIRC  &kp FR_GRV   &kp FR_COLN  
   &kp FR_HASH         &kp FR_DLLR  &kp FR_LPAR  &kp FR_RPAR  &kp FR_GRV       &kp RET       &kp LEFT       &kp DOWN     &kp UP       &kp RIGHT          
   &kp FR_PRCNT        &kp FR_CIRC  &kp FR_LBKT  &kp FR_RBKT  &kp FR_TILD      &kp FR_AMPS   &kp FR_EQUAL   &kp FR_LABK  &kp FR_RABK  &kp FR_QUES  
                                                 &kp LSHFT    &hm LGUI SPACE   &none         &kp DEL
                        >;
                };
                
                raise_layer {
                        label = "raise";

// --------------------------------------------------------------------------------------
// | ESC   |  é     |  "    |  '    |  (      |   |  §      |  è   |  !   |  ç   |  à   |
// |       | Prev   | Play  | Next  | VolUp   |   | PG_UP   | LFT  | DWN  |  UP  | RGT  |
// | SHFT  |        |       | Mute  | VolDn   |   | PG_DN   |      |      |      |      |
//                          |       | SPC/GUI |   | LWR/TAB | DEL  |
                        bindings = <
   &kp ESC     &kp FR_LEAC     &kp FR_DQUO       &kp FR_QUOT  &kp FR_LPAR        &kp FR_SECT    &kp FR_LEGR    &kp FR_EXLM  &kp FR_LCCE  &kp FR_LAGR 
   &none       &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT   &kp C_VOLUME_UP    &kp PG_UP      &kp LEFT       &kp DOWN     &kp UP       &kp RIGHT   
   &kp LSHFT   &none           &none             &kp C_MUTE   &kp C_VOLUME_DOWN  &kp PG_DN      &none          &none        &none        &none 
                                                 &none        &hm LGUI SPACE     &lt LOWER TAB  &kp DEL
                        >;
                };

                adjust_layer {
                        label = "adjust";

// ---------------------------------------------------------------------------------------------
// |         | F2      | F3      | F4      | F5      |   | F6 | F7  | F8     | F9     | F10    | 
// |         | F1      |         |         |         |   |    |     |        | F12    | F11    | 
// |         |         |         |         |         |   |    |     | BT_PRV | BT_NXT | BT_CLR | 
//                               | SHFT    | SPC/GUI |   |    | DEL |
                        bindings = <
   &none   &kp F2  &kp F3     &kp F4     &kp F5          &kp F6  &kp F7  &kp F8       &kp F9      &kp F10     
   &none   &kp F1  &none      &none      &none           &none   &none   &none        &kp F12     &kp F11   
   &none   &none   &none      &none      &none           &none   &none   &bt BT_PRV   &bt BT_NXT  &bt BT_CLR  
                              &kp LSHFT  &hm LGUI SPACE  &none   &kp DEL
                        >;
                };

                num_layer {
                        label = "num";

// -------------------------------------------------------------------------
// | Arc | Slack          | Mail | iTerm |  VScode |   |  -      | 7 | 8 | 9 | BSPC |
// | 👻  | Screen Capture |      |       |         |   |  +      | 4 | 5 | 6 | *    |
// |     |                |      |       |         |   |  0      | 1 | 2 | 3 | /    |
//                               | SHFT  | SPC/GUI |   | LWR/TAB |   |
                        bindings = <
   &focus_arc    &focus_slack     &focus_mail &focus_term &focus_vscode   &kp FR_MINUS   &kp FR_7  &kp FR_8  &kp FR_9  &kp BSPC     
   &show_emojis  &screen_capture  &none       &none       &none           &kp FR_PLUS    &kp FR_4  &kp FR_5  &kp FR_6  &kp FR_ASTR  
   &none         &none            &none       &none       &none           &kp FR_0       &kp FR_1  &kp FR_2  &kp FR_3  &kp FR_SLSH  
                                              &kp LSHFT   &hm LGUI SPACE  &lt LOWER TAB  &none
                        >;
                };
        };
};
